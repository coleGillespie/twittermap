#!/usr/bin/env node

require("colors");

var repl    = require("repl")
,   local   = process.cwd()
,   fs      = require('fs')
,   _       = require("underscore") 
;

global.args = process.argv.slice(2);

var command = args.shift();

switch (command) {

default: case "h": case "help":

  var messages = ['\nTelegraph Commands:'.cyan];
  
  var commands = [
    '----------------------------------------------------------',
    '  h  help                      Display usage information  ',
    '  s  start [port]              Start a telegraph server   ',
    '  c  console                   Start a telegraph REPL     ',
    '  i  init                      Initialize telegraph app   ',
    '  g  generate [type][data]     Generate a module          ',
    '----------------------------------------------------------'
  ];

  commands.forEach(function (cmd) {
    messages.push(cmd);
  });
  
  messages.push('\nAvailable generators:'.cyan);

  var generators = [
    '----------------------------------------------------------',
    '  model    -  The data module                             ',
    '  wiretap  -  The routing/websockets module               ',
    '----------------------------------------------------------'
  ];
  
  generators.forEach(function (gen) {
    messages.push(gen);
  });
  
  console.log(messages.join('\n') + "\n");

  break;


case "g": case "generate":

  var type = args[0]
  ,   types = ['wiretap', 'model']
  ,   name = args[1]
  ,   data = args.slice(2)
  ,   dir  = process.cwd() + "/app/" + type + "s/"
  ;

  if (_.indexOf(types, type) === -1) return console.log("\nGenerator for \"%s\" does not exist.\n".bold.red, type);
  
  console.log("\nGenerating a new " + "%s".cyan + "...".cyan, type);

  try {
    var template = fs.readFileSync(__dirname + "/generators/" + type + ".ejs", "utf-8")
    ,   output   = _.template(template, { name: name,  data: data });
  } catch (x) {
    throw x
  }
  
  fs.writeFile(dir + name.toLowerCase() + ".js", output, function(err) {
    if (err) { throw err; }
    console.log("Successfully created %s %s in %s\n".green, type, name, dir);
  });
  
  break;


case "c": case "console":

  app = require(local + "/server");        
  app.silent_mode = true;
  
  console.log("\nStarting console mode, logs will be silenced...\n");
  
  repl.start("> ");
  break;


case "s": case "start":
  require(process.cwd() + "/server.js")
  break;


case "init":

  var fs        = require("fs")
  ,   fileEX    = /^[^.].+/
  ,   templates = __dirname + "/templates";

  (function traverse(dir, stack) {

    stack.push(dir);
    
    fs.readdirSync(stack.join('/')).forEach(function (file) {
      
      if (file[0] == '.' || file === 'vendor') return;
      
      var path    = stack.concat([file]).join('/')
      ,   current = process.cwd() + "/" + stack.slice(1).join("/")
      ,   stat    = fs.statSync(path)
      ;
      
      if ( stat.isFile() && fileEX.test(path)) {
        var content = fs.readFileSync(path);
        fs.writeFileSync(current + "/" + file, content);
      } else if (stat.isDirectory()) {
        fs.mkdirSync(current + "/" + file);
        traverse(file, stack);
      }

    });
    
    stack.pop();
    
  })(templates, []);
  
  // Cover other directories
  fs.mkdirSync(process.cwd() + "/app/wiretaps");
  fs.mkdirSync(process.cwd() + "/app/models");
  fs.mkdirSync(process.cwd() + "/logs");
  
  console.log("Success".green.bold + "! Check out your new Telegraph app at " + process.cwd().green.bold);

  break;
};
