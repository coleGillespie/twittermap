// Telegraph Auth

module.exports = function(context) {

    var bcrypt = require("bcrypt");
    
    // We absolutely need sessions for this module
    require("../helpers/sessions")(context);

    // Load in our user data
    require("./user");

    // Add "current_user" helper
    context.express.dynamicHelpers({
        current_user: function(req) {
            if (req.session.user) return req.session.user;
            return false;
        }
    });
    
    // Authenticate using our plain-object database of doom!
    function authenticate (name, pass, fn) {
        
        User.findOne({ username : name }, function(e, user) {

            // query the db for the given username
            if (user.length === 0) return fn(new Error('cannot find user'));

            var auth = bcrypt.compare_sync(pass, user.password); // true    
            
            if (auth) {
                return fn(null, user);
            } else {
                return fn(new Error('invalid password'));
            }
            
        });

    }

    function restrict (req, res, next) {
        if (req.session.user) {
            next();
        } else {
            req.session.error = 'Access denied!';
            res.redirect('/login');
        }
    }

    function accessLogger (req, res, next) {
        console.log('/restricted accessed by %s', req.session.user.name);
        next();
    }

    context.auth = {
        authenticate : authenticate,
        restrict     : restrict,
        accessLogger : accessLogger
    };
    

    // Setup default routes
    require("./routes")(context);

};




